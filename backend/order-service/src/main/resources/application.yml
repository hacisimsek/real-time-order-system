server:
  port: ${PORT:8081}
  shutdown: graceful

spring:
  application:
    name: order-service

  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:appdb}
    username: ${DB_USER:app}
    password: ${DB_PASS:app}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2

  jpa:
    open-in-view: false
    hibernate:
      ddl-auto: validate
    properties:
      hibernate.jdbc.time_zone: UTC
      hibernate.format_sql: true

  flyway:
    enabled: true
    locations: classpath:db/migration
    table: flyway_schema_history_order
    baseline-on-migrate: true
    baseline-version: 0

  rabbitmq:
    host: ${RABBIT_HOST:localhost}
    port: ${RABBIT_PORT:5672}
    username: ${RABBIT_USER:guest}
    password: ${RABBIT_PASS:guest}

  jackson:
    time-zone: UTC

management:
  endpoints:
    web:
      exposure:
        include: "health,info,prometheus"
  endpoint:
    health:
      probes:
        enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
  observations:
    key-values:
      application: ${spring.application.name}

app:
  messaging:
    exchange: order.events
    queues:
      orderCreated: dev.notifications.order-created
    routing-keys:
      orderCreated: order.created.v1
      orderStatusChanged: order.status-changed.v1
  security:
    jwtSecret: ${JWT_SECRET:dev-change-this-32B-min-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa}
    issuer: rtos
    audience: rtos-clients
