version: "3.9"

networks:
  rtos:
    driver: bridge

services:
  # ========= INFRA =========
  postgres:
    image: postgres:16
    container_name: dev-postgres
    environment:
      POSTGRES_DB: appdb
      POSTGRES_USER: app
      POSTGRES_PASSWORD: app
    ports: ["5432:5432"]
    networks: [rtos]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d appdb"]
      interval: 10s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: dev-redis
    ports: ["6379:6379"]
    networks: [rtos]

  rabbitmq:
    image: rabbitmq:3-management
    container_name: dev-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks: [rtos]
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10

  # (Prometheus/Grafana/observability sende zaten vardÄ±)

  # ========= APP SERVICES =========
  order-service:
    build:
      context: ../backend/order-service
      dockerfile: Dockerfile
    image: rtos/order-service:dev
    container_name: order-service
    environment:
      PORT: 8081
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: appdb
      DB_USER: app
      DB_PASS: app
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: guest
      RABBIT_PASS: guest
    depends_on:
      postgres: { condition: service_healthy }
      rabbitmq: { condition: service_healthy }
    ports: ["8081:8081"]
    networks: [rtos]

  notification-service:
    build:
      context: ../backend/notification-service
      dockerfile: Dockerfile
    image: rtos/notification-service:dev
    container_name: notification-service
    environment:
      PORT: 8082
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: guest
      RABBIT_PASS: guest
    depends_on:
      rabbitmq: { condition: service_healthy }
    ports: ["8082:8082"]
    networks: [rtos]

  inventory-service:
    build:
      context: ../backend/inventory-service
      dockerfile: Dockerfile
    image: rtos/inventory-service:dev
    container_name: inventory-service
    environment:
      PORT: 8083
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: appdb
      DB_USER: app
      DB_PASS: app
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: guest
      RABBIT_PASS: guest
    depends_on:
      postgres: { condition: service_healthy }
      rabbitmq: { condition: service_healthy }
    ports: ["8083:8083"]
    networks: [rtos]
